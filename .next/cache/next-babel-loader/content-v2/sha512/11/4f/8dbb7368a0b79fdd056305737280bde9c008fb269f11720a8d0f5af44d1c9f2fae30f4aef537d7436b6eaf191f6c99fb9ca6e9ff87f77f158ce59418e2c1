{"ast":null,"code":"// import React from \"react\";\n// import { IProfile } from \"../types\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n// type Props = {\n//   profile: IProfile;\n// };\n// const Profile: React.FC<Props> = ({}) => {\n//   const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//       <div className=\"search-container\">\n//           { loading\n//           ? (<p>Loading...</p>)\n//           : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n//           }\n//         <p>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Profile;\n// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n// export function Profile ({ login, email })  {\n//   const { loading, data } = useQuery(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//         <div className=\"search-container\">\n//           {loading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             <p>\n//               Username: {data} || Email: {data}\n//             </p>\n//           )}\n//           <p></p>\n//         </div>\n//       </div>\n//   );\n// }\n// Profile.propTypes = {\n//   data: {\n//     viewer: {\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     },\n//   }\n// };","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/profile.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\n// import { IProfile } from \"../types\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n\n// type Props = {\n//   profile: IProfile;\n// };\n\n// const Profile: React.FC<Props> = ({}) => {\n\n//   const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n\n//   return (\n//     <div className=\"topnav\">\n//       <div className=\"search-container\">\n//           { loading\n//           ? (<p>Loading...</p>)\n//           : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n//           }\n//         <p>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n\n// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n\n// export function Profile ({ login, email })  {\n\n//   const { loading, data } = useQuery(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//         <div className=\"search-container\">\n//           {loading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             <p>\n//               Username: {data} || Email: {data}\n//             </p>\n//           )}\n//           <p></p>\n//         </div>\n//       </div>\n//   );\n// }\n\n// Profile.propTypes = {\n//   data: {\n//     viewer: {\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     },\n//   }\n// };\n"]},"metadata":{},"sourceType":"script"}