{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/profile.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import React from \"react\";\n// import { IProfile } from \"../types\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n// type Props = {\n//   profile: IProfile;\n// };\n// const Profile: React.FC<Props> = ({}) => {\n//   const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//       <div className=\"search-container\">\n//           { loading\n//           ? (<p>Loading...</p>)\n//           : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n//           }\n//         <p>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Profile;\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROFILE } from \"../queries/queries\";\n\nvar profile = /*#__PURE__*/function (_Component) {\n  _inherits(profile, _Component);\n\n  var _super = _createSuper(profile);\n\n  function profile() {\n    _classCallCheck(this, profile);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(profile, [{\n    key: \"render\",\n    value: function render() {\n      var _useQuery = useQuery(GET_PROFILE),\n          loading = _useQuery.loading,\n          data = _useQuery.data;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topnav\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", data, \" || Email: \", data]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return profile;\n}(Component);\n\nprofile.propTypes = {\n  data: {\n    viewer: {\n      login: PropTypes.string,\n      email: PropTypes.string\n    }\n  }\n};\nexport default profile;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/profile.tsx"],"names":["React","Component","PropTypes","useQuery","GET_PROFILE","profile","loading","data","propTypes","viewer","login","string","email"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;IAEMC,O;;;;;;;;;;;;;6BAEK;AAAA,sBACmBF,QAAQ,CAAUC,WAAV,CAD3B;AAAA,UACCE,OADD,aACCA,OADD;AAAA,UACUC,IADV,aACUA,IADV;;AAEP,0BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,qBACGD,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,gBAGN;AAAA,qCACaC,IADb,iBAC8BA,IAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAQE;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAcD;;;;EAlBmBN,S;;AAqBtBI,OAAO,CAACG,SAAR,GAAoB;AAClBD,EAAAA,IAAI,EAAE;AACJE,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAER,SAAS,CAACS,MADX;AAENC,MAAAA,KAAK,EAAEV,SAAS,CAACS;AAFX;AADJ;AADY,CAApB;AASA,eAAeN,OAAf","sourcesContent":["// import React from \"react\";\n// import { IProfile } from \"../types\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n\n// type Props = {\n//   profile: IProfile;\n// };\n\n// const Profile: React.FC<Props> = ({}) => {\n\n//   const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n\n//   return (\n//     <div className=\"topnav\">\n//       <div className=\"search-container\">\n//           { loading\n//           ? (<p>Loading...</p>)\n//           : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n//           }\n//         <p>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROFILE } from \"../queries/queries\";\n\nclass profile extends Component {\n\n  render() {\n    const { loading, data } = useQuery<profile>(GET_PROFILE);\n    return (\n      <div className=\"topnav\">\n        <div className=\"search-container\">\n          {loading ? (\n            <p>Loading...</p>\n          ) : (\n            <p>\n              Username: {data} || Email: {data}\n            </p>\n          )}\n          <p></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nprofile.propTypes = {\n  data: {\n    viewer: {\n      login: PropTypes.string,\n      email: PropTypes.string,\n    },\n  },\n};\n\nexport default profile;\n"]},"metadata":{},"sourceType":"module"}