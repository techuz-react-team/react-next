{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\";\nimport * as React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nconst CreateRepo = ({}) => {\n  const CreateRepoMutation = gql`\n  mutation CreateRepoMutation($email: String!, $password: String!) {\n    register(email: $email, password: $password)\n  }\n`;\n  return /*#__PURE__*/_jsxDEV(Mutation, {\n    mutation: CreateRepoMutation,\n    children: mutate => /*#__PURE__*/_jsxDEV(Form, {\n      buttonText: \"register\",\n      onSubmit: async data => {\n        const response = await mutate({\n          variables: data\n        });\n        console.log(response);\n        this.props.history.push(\"/login\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateRepo; // import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default CreateRepo;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["React","Mutation","gql","CreateRepo","CreateRepoMutation","mutate","data","response","variables","console","log","props","history","push"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AAGA,MAAMC,UAAyB,GAAG,CAAC,EAAD,KAAQ;AAExC,QAAMC,kBAAkB,GAAGF,GAAI;AACjC;AACA;AACA;AACA,CAJE;AAMA,sBACE,QAAC,QAAD;AACE,IAAA,QAAQ,EAAEE,kBADZ;AAAA,cAGIC,MAAD,iBACC,QAAC,IAAD;AACE,MAAA,UAAU,EAAC,UADb;AAEE,MAAA,QAAQ,EAAE,MAAOC,IAAP,IAAgB;AACxB,cAAMC,QAAQ,GAAG,MAAMF,MAAM,CAAC;AAC5BG,UAAAA,SAAS,EAAEF;AADiB,SAAD,CAA7B;AAGAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,aAAKI,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AARH;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1BD;;AA2BA,eAAeV,UAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import * as React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { CreateRepoMutation, CreateRepoMutationVariables } from \"../types\";\n\nconst CreateRepo: React.FC<any> = ({}) => {\n\n  const CreateRepoMutation = gql`\n  mutation CreateRepoMutation($email: String!, $password: String!) {\n    register(email: $email, password: $password)\n  }\n`;\n\n  return (\n    <Mutation<CreateRepoMutation, CreateRepoMutationVariables>\n      mutation={CreateRepoMutation}\n    >\n      {(mutate) => (\n        <Form\n          buttonText=\"register\"\n          onSubmit={async (data) => {\n            const response = await mutate({\n              variables: data,\n            });\n            console.log(response);\n            this.props.history.push(\"/login\");\n          }}\n        />\n      )}\n    </Mutation>\n  );\n};\nexport default CreateRepo;\n\n// import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n\n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CreateRepo;\n"]},"metadata":{},"sourceType":"module"}