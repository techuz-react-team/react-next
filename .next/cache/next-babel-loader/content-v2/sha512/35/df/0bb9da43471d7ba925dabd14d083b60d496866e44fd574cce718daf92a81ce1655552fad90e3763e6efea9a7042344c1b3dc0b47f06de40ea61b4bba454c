{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\nvar CreateRepoForm = function CreateRepoForm(_ref) {\n  _s();\n\n  var _errors$name, _errors$name2;\n\n  _objectDestructuringEmpty(_ref);\n\n  var validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\")\n  });\n\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      visibility = _useState2[0],\n      setVisibility = _useState2[1];\n\n  var _useForm = useForm({\n    resolver: yupResolver(validationSchema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useMutation = useMutation(CREATE_REPO, {\n    variables: {\n      name: name,\n      visibility: visibility\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createRepo = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  var handleCreateRepo = function handleCreateRepo(formData) {\n    alert(JSON.stringify(formData));\n    createRepo({\n      variables: {\n        name: name,\n        visibility: visibility\n      },\n      refetchQueries: [{\n        query: GET_REPOSITORIES\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Repository\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Oh no! \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, _this) : null, data && data.createRepo ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Saved!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, _this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleCreateRepo),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register({\n            required: true\n          }),\n          type: \"text\",\n          name: \"name\",\n          onChange: function onChange(e) {\n            return setName(e.target.value);\n          },\n          className: \"form-control \".concat(errors.name ? \"is-invalid\" : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Visibility\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: register({\n            required: true\n          }),\n          name: \"visibility\",\n          onChange: function onChange(e) {\n            return setVisibility(e.target.value);\n          },\n          className: \"form-control \".concat(errors.name ? \"is-invalid\" : \"\"),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PRIVATE\",\n            children: \"PRIVATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PUBLIC\",\n            children: \"PUBLIC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Repo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateRepoForm, \"P98ZjyYID9cOhyLcF0FgipykVOg=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = CreateRepoForm;\nexport default CreateRepoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRepoForm\");","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["React","useState","useMutation","useForm","CREATE_REPO","GET_REPOSITORIES","yupResolver","Yup","CreateRepoForm","validationSchema","object","shape","name","string","required","visibility","setName","setVisibility","resolver","register","handleSubmit","errors","variables","createRepo","error","data","handleCreateRepo","formData","alert","JSON","stringify","refetchQueries","query","message","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { IcreateRepo } from \"../types\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\n\nconst CreateRepoForm: React.FC<any> = ({}) => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\"),\n  });\n  const [name, setName] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"\");\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const [createRepo, { error, data }] = useMutation<{\n    createRepo: IcreateRepo;\n  }>(CREATE_REPO, {\n    variables: { name, visibility },\n  });\n\n  const handleCreateRepo = (formData) => {\n    alert(JSON.stringify(formData));\n    createRepo({\n      variables: { name, visibility },\n      refetchQueries: [{ query: GET_REPOSITORIES }],\n    });\n  };\n\n  return (\n    <div>\n      <h3>Create Repository</h3>\n      {error ? <p>Oh no! {error.message}</p> : null}\n      {data && data.createRepo ? <p>Saved!</p> : null}\n      <form onSubmit={handleSubmit(handleCreateRepo)}>\n      <div className=\"form-group col-6\">\n          <label>Name</label>\n          <input\n            ref={register({required: true })}\n            type=\"text\"\n            name=\"name\"\n            onChange={(e) => setName(e.target.value)}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\n        </div>\n        <div className=\"form-group col-6\">\n          <label>Visibility</label>\n          <select\n            ref={register({required: true })}\n            name=\"visibility\"\n            onChange={(e) => setVisibility(e.target.value)}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          >\n            <option value=\"\">Select visibility</option>\n            <option value=\"PRIVATE\">PRIVATE</option>\n            <option value=\"PUBLIC\">PUBLIC</option>\n          </select>\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\n        </div>\n        <button type=\"submit\">Create Repo</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateRepoForm;\n"]},"metadata":{},"sourceType":"module"}