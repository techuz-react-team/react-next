{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RegisterMutation($email: String!, $password: String!) {\\n    register(email: $email, password: $password)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nvar registerMutation = gql(_templateObject());\nexport default (function () {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Register page\",\n    children: /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: registerMutation,\n      children: function children(register) {\n        return /*#__PURE__*/_jsxDEV(Formik, {\n          validateOnBlur: false,\n          validateOnChange: false,\n          onSubmit: /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, _ref) {\n              var setErrors, response;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      setErrors = _ref.setErrors;\n                      _context.prev = 1;\n                      _context.next = 4;\n                      return register({\n                        variables: {\n                          data: data\n                        }\n                      });\n\n                    case 4:\n                      response = _context.sent;\n                      console.log(response);\n                      _context.next = 11;\n                      break;\n\n                    case 8:\n                      _context.prev = 8;\n                      _context.t0 = _context[\"catch\"](1);\n                      console.log(_context.t0);\n\n                    case 11:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[1, 8]]);\n            }));\n\n            return function (_x, _x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }(),\n          initialValues: {\n            email: \"\",\n            password: \"\"\n          },\n          children: function children(_ref3) {\n            var handleSubmit = _ref3.handleSubmit;\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                placeholder: \"email\",\n                component: InputField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                placeholder: \"password\",\n                type: \"password\",\n                component: InputField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n}); // const CreateRepo: React.FC<any> = ({}) => { \n//   return(\n//     <div> create repo</div>\n//   )\n// }\n// export default CreateRepo;\n// import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default CreateRepo;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["Field","Formik","React","Layout","registerMutation","gql","register","data","setErrors","variables","response","console","log","email","password","handleSubmit","InputField"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,QAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAIA,IAAMC,gBAAgB,GAAGC,GAAH,mBAAtB;AAMA,gBAAe,YAAM;AACnB,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAED,gBADZ;AAAA,gBAGG,kBAAAE,QAAQ;AAAA,4BACP,QAAC,MAAD;AACE,UAAA,cAAc,EAAE,KADlB;AAEE,UAAA,gBAAgB,EAAE,KAFpB;AAGE,UAAA,QAAQ;AAAA,iFAAE,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAeC,sBAAAA,SAAf,QAAeA,SAAf;AAAA;AAAA;AAAA,6BAEiBF,QAAQ,CAAC;AAC9BG,wBAAAA,SAAS,EAAE;AACTF,0BAAAA,IAAI,EAAJA;AADS;AADmB,uBAAD,CAFzB;;AAAA;AAEAG,sBAAAA,QAFA;AAONC,sBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAPM;AAAA;;AAAA;AAAA;AAAA;AASNC,sBAAAA,OAAO,CAACC,GAAR;;AATM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAF;;AAAA;AAAA;AAAA;AAAA,aAHV;AAeE,UAAA,aAAa,EAAE;AACbC,YAAAA,KAAK,EAAE,EADM;AAEbC,YAAAA,QAAQ,EAAE;AAFG,WAfjB;AAAA,oBAoBG;AAAA,gBAAGC,YAAH,SAAGA,YAAH;AAAA,gCACC;AAAM,cAAA,QAAQ,EAAEA,YAAhB;AAAA,sCACE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,OADP;AAEE,gBAAA,WAAW,EAAC,OAFd;AAGE,gBAAA,SAAS,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,uBADF,eAME,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,WAAW,EAAC,UAFd;AAGE,gBAAA,IAAI,EAAC,UAHP;AAIE,gBAAA,SAAS,EAAEA;AAJb;AAAA;AAAA;AAAA;AAAA,uBANF,eAYE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD;AAAA;AApBH;AAAA;AAAA;AAAA;AAAA,iBADO;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA+CD,CAhDD,E,CAkDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { Field, Formik } from \"formik\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\n\nimport { RegisterMutationVariables, RegisterMutation } from \"../../schemaTypes\";\n\nconst registerMutation = gql`\n  mutation RegisterMutation($email: String!, $password: String!) {\n    register(email: $email, password: $password)\n  }\n`;\n\nexport default () => {\n  return (\n    <Layout title=\"Register page\">\n      <Mutation<RegisterMutation, RegisterMutationVariables>\n        mutation={registerMutation}\n      >\n        {register => (\n          <Formik\n            validateOnBlur={false}\n            validateOnChange={false}\n            onSubmit={async (data, { setErrors }) => {\n              try {\n                const response = await register({\n                  variables: {\n                    data\n                  }\n                });\n                console.log(response);\n              } catch (err) {\n                console.log(err)\n              }\n            }}\n            initialValues={{\n              email: \"\",\n              password: \"\"\n            }}\n          >\n            {({ handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                <Field\n                  name=\"email\"\n                  placeholder=\"email\"\n                  component={InputField}\n                />\n                <Field\n                  name=\"password\"\n                  placeholder=\"password\"\n                  type=\"password\"\n                  component={InputField}\n                />\n                <button type=\"submit\">submit</button>\n              </form>\n            )}\n          </Formik>\n        )}\n      </Mutation>\n    </Layout>\n  );\n};\n\n// const CreateRepo: React.FC<any> = ({}) => { \n//   return(\n//     <div> create repo</div>\n//   )\n// }\n// export default CreateRepo;\n\n// import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n  \n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CreateRepo;\n"]},"metadata":{},"sourceType":"module"}