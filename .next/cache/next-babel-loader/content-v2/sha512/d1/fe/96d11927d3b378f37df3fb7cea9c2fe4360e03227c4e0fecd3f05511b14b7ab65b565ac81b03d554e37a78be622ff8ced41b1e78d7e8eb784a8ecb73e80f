{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/profile.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROFILE } from \"../queries/queries\";\n\nconst Profile = ({\n  profile\n}) => {\n  var _data$viewer;\n\n  const {\n    loading,\n    data\n  } = useQuery(GET_PROFILE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topnav\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", profile, \" || Email: \", data === null || data === void 0 ? void 0 : (_data$viewer = data.viewer) === null || _data$viewer === void 0 ? void 0 : _data$viewer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Profile; // import React from \"react\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n// import PropTypes from \"prop-types\";\n// const Profile = () => {\n//   const { loading, data } = useQuery(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//       <div className=\"search-container\">\n//           { loading\n//           ? (<p>Loading...</p>)\n//           : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n//           }\n//         <p>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// Profile.propTypes = {\n//   data: PropTypes.objectOf(\n//     PropTypes.shape({\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     })\n//   ),\n// };\n// export default Profile;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/profile.tsx"],"names":["React","useQuery","GET_PROFILE","Profile","profile","loading","data","viewer","email"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAMA,MAAMC,OAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAEhD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBL,QAAQ,CAAWC,WAAX,CAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGG,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBAGN;AAAA,iCACaD,OADb,iBACiCE,IADjC,aACiCA,IADjC,uCACiCA,IAAI,CAAEC,MADvC,iDACiC,aAAcC,KAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQE;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlBD;;AAoBA,eAAeL,OAAf,C,CAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { IProfile } from \"../types\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROFILE } from \"../queries/queries\";\n\ntype Props = {\n  profile: IProfile;\n};\n\nconst Profile: React.FC<Props> = ({ profile }) => {\n  \n  const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n\n  return (\n    <div className=\"topnav\">\n      <div className=\"search-container\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <p>\n            Username: {profile} || Email: {data?.viewer?.email}\n          </p>\n        )}\n        <p></p>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n\n\n// import React from \"react\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n// import PropTypes from \"prop-types\";\n\n// const Profile = () => {\n\n//   const { loading, data } = useQuery(GET_PROFILE);\n\n//   return (\n//     <div className=\"topnav\">\n//       <div className=\"search-container\">\n//           { loading\n//           ? (<p>Loading...</p>)\n//           : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n//           }\n//         <p>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// Profile.propTypes = {\n//   data: PropTypes.objectOf(\n//     PropTypes.shape({\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     })\n//   ),\n// };\n\n// export default Profile;\n"]},"metadata":{},"sourceType":"module"}