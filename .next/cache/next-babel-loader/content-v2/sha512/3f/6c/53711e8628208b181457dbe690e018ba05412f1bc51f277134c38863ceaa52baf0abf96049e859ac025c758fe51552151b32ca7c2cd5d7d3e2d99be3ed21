{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation saveRocket($rocket: RocketInput!) {\\n    saveRocket(rocket: $rocket) {\\n      model\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import React, { useState } from \"react\";\n// import { useMutation } from \"@apollo/client\";\n// import { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\n// import { IcreateRepo } from \"../types\";\n// const CreateRepoForm: React.FC<any> = ({ }) => {\n//   const [name, setName] = useState(\"\");\n//   const [visibility, setVisibility] = useState(\"\");\n//   const [createRepo, { error, data }] = \n//   useMutation< { createRepo: IcreateRepo }>\n//   (CREATE_REPO, {\n//     variables: { name, visibility },\n//   });\n//   return (\n//     <div>\n//       <h3>Create Repository</h3>\n//       {error ? <p>Oh no! {error.message}</p> : null}\n//       {data && data.createRepo ? <p>Saved!</p> : null}\n//       <form onSubmit={() => name && visibility && createRepo()}>\n//         <p>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <label>Visibility</label>\n//           <select name=\"visibility\" onChange={(e) => setVisibility(e.target.value)}>\n//             <option value=\"\">Select visibility</option>\n//             <option value=\"PRIVATE\">PRIVATE</option>\n//             <option value=\"PUBLIC\">PUBLIC</option>\n//           </select>\n//         </p>\n//         <button type=\"submit\" >Create Repo</button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default CreateRepoForm;\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\nvar SAVE_ROCKET = gql(_templateObject());\nexport function CreateRepoForm() {\n  _s();\n\n  var _useState = useState(''),\n      model = _useState[0],\n      setModel = _useState[1];\n\n  var _useState2 = useState(0),\n      year = _useState2[0],\n      setYear = _useState2[1];\n\n  var _useState3 = useState(0),\n      stock = _useState3[0],\n      setStock = _useState3[1];\n\n  var _useMutation = useMutation(SAVE_ROCKET, {\n    variables: {\n      rocket: {\n        model: model,\n        year: +year,\n        stock: +stock\n      }\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      saveRocket = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Rocket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Oh no! \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this) : null, data && data.saveRocket ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Saved!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 34\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"model\",\n          onChange: function onChange(e) {\n            return setModel(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"model\",\n          onChange: function onChange(e) {\n            return setYear(+e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"stock\",\n          onChange: function onChange(e) {\n            return setStock(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return model && year && stock && saveRocket();\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRepoForm, \"zuVNWsbnpdjLWtmRrrR5uq7293U=\", false, function () {\n  return [useMutation];\n});\n\n_c = CreateRepoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRepoForm\");","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["React","useState","useMutation","gql","SAVE_ROCKET","CreateRepoForm","model","setModel","year","setYear","stock","setStock","variables","rocket","saveRocket","error","data","message","e","target","value"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\n// import { useMutation } from \"@apollo/client\";\n// import { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\n// import { IcreateRepo } from \"../types\";\n\n// const CreateRepoForm: React.FC<any> = ({ }) => {\n//   const [name, setName] = useState(\"\");\n//   const [visibility, setVisibility] = useState(\"\");\n\n//   const [createRepo, { error, data }] = \n//   useMutation< { createRepo: IcreateRepo }>\n//   (CREATE_REPO, {\n//     variables: { name, visibility },\n//   });\n\n//   return (\n//     <div>\n//       <h3>Create Repository</h3>\n//       {error ? <p>Oh no! {error.message}</p> : null}\n//       {data && data.createRepo ? <p>Saved!</p> : null}\n//       <form onSubmit={() => name && visibility && createRepo()}>\n//         <p>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <label>Visibility</label>\n//           <select name=\"visibility\" onChange={(e) => setVisibility(e.target.value)}>\n//             <option value=\"\">Select visibility</option>\n//             <option value=\"PRIVATE\">PRIVATE</option>\n//             <option value=\"PUBLIC\">PUBLIC</option>\n//           </select>\n//         </p>\n//         <button type=\"submit\" >Create Repo</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default CreateRepoForm;\n\nimport React, { useState } from 'react';\nimport { useMutation, gql } from '@apollo/client';\n\nconst SAVE_ROCKET = gql`\n  mutation saveRocket($rocket: RocketInput!) {\n    saveRocket(rocket: $rocket) {\n      model\n    }\n  }\n`;\n\ninterface RocketInventory {\n  id: number;\n  model: string;\n  year: number;\n  stock: number;\n}\n\ninterface NewRocketDetails {\n  model: string;\n  year: number;\n  stock: number;\n}\n\nexport function CreateRepoForm() {\n  const [model, setModel] = useState('');\n  const [year, setYear] = useState(0);\n  const [stock, setStock] = useState(0);\n\n  const [saveRocket, { error, data }] = useMutation<\n    { saveRocket: RocketInventory },\n    { rocket: NewRocketDetails }\n  >(SAVE_ROCKET, {\n    variables: { rocket: { model, year: +year, stock: +stock } }\n  });\n\n  return (\n    <div>\n      <h3>Add a Rocket</h3>\n      {error ? <p>Oh no! {error.message}</p> : null}\n      {data && data.saveRocket ? <p>Saved!</p> : null}\n      <form>\n        <p>\n          <label>Model</label>\n          <input\n            name=\"model\"\n            onChange={e => setModel(e.target.value)}\n          />\n        </p>\n        <p>\n          <label>Year</label>\n          <input\n            type=\"number\"\n            name=\"model\"\n            onChange={e => setYear(+e.target.value)}\n          />\n        </p>\n        <p>\n          <label>Stock</label>\n          <input\n            type=\"number\"\n            name=\"stock\"\n            onChange={e => setStock(e.target.value)}\n          />\n        </p>\n        <button onClick={() => model && year && stock && saveRocket()}>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}