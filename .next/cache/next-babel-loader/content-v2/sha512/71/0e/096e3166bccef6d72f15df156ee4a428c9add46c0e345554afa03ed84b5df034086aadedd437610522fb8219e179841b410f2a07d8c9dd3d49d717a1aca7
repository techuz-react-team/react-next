{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/pages/_document.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from \"next/document\";\nexport default class MyDocument extends Document {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      lang: \"en\",\n      children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  const originalRenderPage = ctx.renderPage;\n  console.log(originalRenderPage);\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }, this)\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps);\n};","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/pages/_document.tsx"],"names":["Document","Html","Head","Main","NextScript","MyDocument","render","getInitialProps","ctx","originalRenderPage","renderPage","console","log","enhanceApp","App","props","initialProps"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AAEA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC/CM,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAX8C;;AAcjDD,UAAU,CAACE,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C,QAAMC,kBAAkB,GAAGD,GAAG,CAACE,UAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;;AACAD,EAAAA,GAAG,CAACE,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBI,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,iBAAW,QAAC,GAAD,oBAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AADf,GAAD,CADpB;;AAIA,QAAMC,YAAY,GAAG,MAAMhB,QAAQ,CAACO,eAAT,CAAyBC,GAAzB,CAA3B;AACA,2BACKQ,YADL;AAGD,CAXD","sourcesContent":["import Document, { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\nMyDocument.getInitialProps = async (ctx) => {\n  const originalRenderPage = ctx.renderPage;\n  console.log(originalRenderPage)\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: (App) => (props) => <App {...props} />,\n    });\n  const initialProps = await Document.getInitialProps(ctx);\n  return {\n    ...initialProps,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}