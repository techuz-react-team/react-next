{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/footer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Container from \"./container\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\n\nvar Footer = function Footer() {\n  _s();\n\n  var _data$viewer, _data$viewer$reposito;\n\n  var _useQuery = useQuery(GET_REPOSITORIES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var repoList = data === null || data === void 0 ? void 0 : (_data$viewer = data.viewer) === null || _data$viewer === void 0 ? void 0 : (_data$viewer$reposito = _data$viewer.repositories) === null || _data$viewer$reposito === void 0 ? void 0 : _data$viewer$reposito.nodes;\n\n  if (loading) {\n    return \"Loading...\";\n  }\n\n  if (error) {\n    return \"Error! \".concat(error.message);\n  } // const renderRepoList = React.useMemo(() => {\n  //   return repoList;\n  // }, [repoList]);\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: repoList.map(function (repo, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: repo.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 20\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Footer, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Footer;\nexport default Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/footer.tsx"],"names":["Container","React","useQuery","GET_REPOSITORIES","Footer","loading","error","data","repoList","viewer","repositories","nodes","message","map","repo","index","name"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA;;AAAA,kBACcF,QAAQ,CAACC,gBAAD,CADtB;AAAA,MACXE,OADW,aACXA,OADW;AAAA,MACFC,KADE,aACFA,KADE;AAAA,MACKC,IADL,aACKA,IADL;;AAEnB,MAAMC,QAAQ,GAAGD,IAAH,aAAGA,IAAH,uCAAGA,IAAI,CAAEE,MAAT,0EAAG,aAAcC,YAAjB,0DAAG,sBAA4BC,KAA7C;;AAEA,MAAIN,OAAJ,EAAa;AACX,WAAO,YAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,4BAAiBA,KAAK,CAACM,OAAvB;AACD,GATkB,CAWnB;AACA;AACA;;;AAEA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,kBACGJ,QAAQ,CAACK,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B,8BAAO;AAAA,sBAAiBD,IAAI,CAACE;AAAtB,aAASD,KAAT;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA3BD;;GAAMX,M;UAC6BF,Q;;;KAD7BE,M;AA6BN,eAAeA,MAAf","sourcesContent":["import Container from \"./container\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\n\nconst Footer = () => {\n  const { loading, error, data } = useQuery(GET_REPOSITORIES);\n  const repoList = data?.viewer?.repositories?.nodes;\n\n  if (loading) {\n    return \"Loading...\";\n  }\n  if (error) {\n    return `Error! ${error.message}`;\n  }\n\n  // const renderRepoList = React.useMemo(() => {\n  //   return repoList;\n  // }, [repoList]);\n\n  return (\n    <Container>\n      <div className=\"footer\">\n        <h3>All Repositories</h3>\n        <ul>\n          {repoList.map((repo, index) => {\n            return <li key={index}>{repo.name}</li>;\n          })}\n        </ul>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n"]},"metadata":{},"sourceType":"module"}