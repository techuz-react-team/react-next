{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { Formik, Form } from \"formik\";\n\nvar CreateRepo = function CreateRepo() {\n  _s();\n\n  var _errors$name, _errors$visibility;\n\n  var _React$useState = React.useState({\n    name: \"\",\n    visibility: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputs = _React$useState2[0],\n      setInputs = _React$useState2[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n    setInputs(function (inputs) {\n      return _objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n\n  var initialValues = {\n    firstName: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: function onSubmit(values, actions) {\n        console.log({\n          values: values,\n          actions: actions\n        });\n        alert(JSON.stringify(values, null, 2));\n        actions.setSubmitting(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Repository name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: handleInputChange,\n            value: inputs.name,\n            ref: register,\n            className: \"form-control \".concat(errors.name ? \"is-invalid\" : \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Visibility:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"visibility\",\n            onChange: handleInputChange,\n            value: inputs.visibility,\n            ref: register,\n            className: \"form-control \".concat(errors.visibility ? \"is-invalid\" : \"\"),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select visibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PRIVATE\",\n              children: \"PRIVATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"PUBLIC\",\n              children: \"PUBLIC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: (_errors$visibility = errors.visibility) === null || _errors$visibility === void 0 ? void 0 : _errors$visibility.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"New Repo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateRepo, \"sHGKQLvwiyj4g3mNZbYOsKyMafE=\");\n\n_c = CreateRepo;\nexport default CreateRepo; // const CreateRepo: React.FC<any> = ({}) => {\n//   return(\n//     <div> create repo</div>\n//   )\n// }\n// export default CreateRepo;\n// import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default CreateRepo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRepo\");","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["React","Formik","Form","CreateRepo","useState","name","visibility","inputs","setInputs","handleInputChange","event","persist","target","value","initialValues","firstName","values","actions","console","log","alert","JSON","stringify","setSubmitting","register","errors","message"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Formik,\n  FormikHelpers,\n  FormikProps,\n  Form,\n  Field,\n  FieldProps,\n} from \"formik\";\n\ninterface MyFormValues {\n  firstName: string;\n}\n\nconst CreateRepo: React.FC<{}> = () => {\n  \n  const [inputs, setInputs] = React.useState({ name: \"\", visibility: \"\" });\n\n  const handleInputChange = (event: any) => {\n    event.persist();\n    setInputs((inputs) => ({\n      ...inputs,\n      [event.target.name]: event.target.value,\n    }));\n  };\n  const initialValues: MyFormValues = { firstName: \"\" };\n  return (\n    <div>\n      <h1>My Example</h1>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          console.log({ values, actions });\n          alert(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        }}\n      >\n        <Form>\n          <div className=\"form-group col-6\">\n            <label>Repository name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={handleInputChange}\n              value={inputs.name}\n              ref={register}\n              className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n            />\n            <div className=\"invalid-feedback\">{errors.name?.message}</div>\n          </div>\n          <div className=\"form-group col-6\">\n            <label>Visibility:</label>\n            <select\n              name=\"visibility\"\n              onChange={handleInputChange}\n              value={inputs.visibility}\n              ref={register}\n              className={`form-control ${\n                errors.visibility ? \"is-invalid\" : \"\"\n              }`}\n            >\n              <option value=\"\">Select visibility</option>\n              <option value=\"PRIVATE\">PRIVATE</option>\n              <option value=\"PUBLIC\">PUBLIC</option>\n            </select>\n            <div className=\"invalid-feedback\">{errors.visibility?.message}</div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            New Repo\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default CreateRepo;\n\n// const CreateRepo: React.FC<any> = ({}) => {\n//   return(\n//     <div> create repo</div>\n//   )\n// }\n// export default CreateRepo;\n\n// import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n\n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CreateRepo;\n"]},"metadata":{},"sourceType":"module"}