{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/repository.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\nconst defaultProps = {\n  viewer: {}\n};\n\nconst Repository = ({}) => {\n  var _data$viewer, _data$viewer$reposito;\n\n  const {\n    data\n  } = useQuery(GET_REPOSITORIES);\n  const repoList = data === null || data === void 0 ? void 0 : (_data$viewer = data.viewer) === null || _data$viewer === void 0 ? void 0 : (_data$viewer$reposito = _data$viewer.repositories) === null || _data$viewer$reposito === void 0 ? void 0 : _data$viewer$reposito.nodes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (repoList || []).map((repo, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: repo.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Repository;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/repository.tsx"],"names":["React","useQuery","GET_REPOSITORIES","defaultProps","viewer","Repository","data","repoList","repositories","nodes","map","repo","index","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,MAAM,EAAC;AAAR,CAArB;;AAEA,MAAMC,UAAkC,GAAG,CAAC,EAAD,KAAU;AAAA;;AAEnD,QAAM;AAAEC,IAAAA;AAAF,MAAWL,QAAQ,CAACC,gBAAD,CAAzB;AACA,QAAMK,QAAQ,GAAGD,IAAH,aAAGA,IAAH,uCAAGA,IAAI,CAAEF,MAAT,0EAAG,aAAcI,YAAjB,0DAAG,sBAA4BC,KAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACG,CAACF,QAAQ,IAAI,EAAb,EAAkBG,GAAlB,CAAsB,CAACC,IAAD,EAAcC,KAAd,KAA6B;AAClD,4BAAO;AAAA,oBAAiBD,IAAI,CAACE;AAAtB,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAfD;;AAiBA,eAAeP,UAAf","sourcesContent":["import React from \"react\";\nimport { RepoListProps, Repos } from \"../types\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\n\nconst defaultProps = {viewer:{}}\n\nconst Repository: React.FC<defaultProps> = ({  }) => {\n    \n  const { data } = useQuery(GET_REPOSITORIES);\n  const repoList = data?.viewer?.repositories?.nodes;\n\n  return (\n    <div className=\"footer\">\n      <h3>All Repositories</h3>\n      <ul>\n        {(repoList || [] ).map((repo: Repos, index: any) => {\n          return <li key={index}>{repo.name}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}