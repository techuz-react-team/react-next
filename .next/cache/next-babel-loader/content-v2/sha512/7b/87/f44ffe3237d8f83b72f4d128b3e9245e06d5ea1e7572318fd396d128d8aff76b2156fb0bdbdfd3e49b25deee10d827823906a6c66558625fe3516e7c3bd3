{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\nconst CreateNewRepo = () => {\n  var _errors$name, _errors$visibility;\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\")\n  });\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const [inputs, setInputs] = React.useState({\n    name: \"\",\n    visibility: \"\"\n  });\n  const [createRepo, {\n    loading,\n    error\n  }] = useMutation(CREATE_REPO, {\n    onCompleted: data => alert(\"Repo Created Successfully\", data),\n    onError: error => console.error(\"Error creating a post\", error)\n  });\n\n  if (loading) {\n    return \"Loading...\";\n  }\n\n  if (error) {\n    return `Error! ${error.message}`;\n  }\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputs(inputs => _objectSpread(_objectSpread({}, inputs), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleCreateRepo = event => {\n    // console.log(typeof inputs.visibility)\n    // event.preventDefault();\n    createRepo({\n      variables: inputs,\n      refetchQueries: [{\n        query: GET_REPOSITORIES\n      }]\n    });\n    setInputs(\"\");\n  }; // const handleCreateRepo = useCallback((event) => {\n  //   event.preventDefault();\n  //   createRepo({\n  //     variables: inputs,\n  //     refetchQueries: [{ query: GET_REPOSITORIES }],\n  //   });\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleCreateRepo),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Repository name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleInputChange,\n          value: inputs.name,\n          ref: register,\n          className: `form-control ${errors.name ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Visibility:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"visibility\",\n          onChange: handleInputChange,\n          value: inputs.visibility,\n          ref: register,\n          className: `form-control ${errors.visibility ? \"is-invalid\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PRIVATE\",\n            children: \"PRIVATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PUBLIC\",\n            children: \"PUBLIC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$visibility = errors.visibility) === null || _errors$visibility === void 0 ? void 0 : _errors$visibility.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"New Repo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateNewRepo;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["useMutation","React","CREATE_REPO","GET_REPOSITORIES","useForm","yupResolver","Yup","CreateNewRepo","validationSchema","object","shape","name","string","required","visibility","register","handleSubmit","errors","resolver","inputs","setInputs","useState","createRepo","loading","error","onCompleted","data","alert","onError","console","message","handleInputChange","event","persist","target","value","handleCreateRepo","variables","refetchQueries","query"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,oBAA9C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,IAAI,EAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,6BAAtB,CADoC;AAE1CC,IAAAA,UAAU,EAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB;AAF8B,GAAnB,CAAzB;AAKA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCb,OAAO,CAAC;AACjDc,IAAAA,QAAQ,EAAEb,WAAW,CAACG,gBAAD;AAD4B,GAAD,CAAlD;AAIA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBnB,KAAK,CAACoB,QAAN,CAAe;AAAEV,IAAAA,IAAI,EAAE,EAAR;AAAYG,IAAAA,UAAU,EAAE;AAAxB,GAAf,CAA5B;AAEA,QAAM,CAACQ,UAAD,EAAa;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAb,IAAmCxB,WAAW,CAACE,WAAD,EAAc;AAChEuB,IAAAA,WAAW,EAAGC,IAAD,IAAUC,KAAK,CAAC,2BAAD,EAA8BD,IAA9B,CADoC;AAEhEE,IAAAA,OAAO,EAAGJ,KAAD,IAAWK,OAAO,CAACL,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AAF4C,GAAd,CAApD;;AAKA,MAAID,OAAJ,EAAa;AACX,WAAO,YAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,WAAQ,UAASA,KAAK,CAACM,OAAQ,EAA/B;AACD;;AAED,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,OAAN;AACAb,IAAAA,SAAS,CAAED,MAAD,oCACLA,MADK;AAER,OAACa,KAAK,CAACE,MAAN,CAAavB,IAAd,GAAqBqB,KAAK,CAACE,MAAN,CAAaC;AAF1B,MAAD,CAAT;AAID,GAND;;AAQA,QAAMC,gBAAgB,GAAIJ,KAAD,IAAW;AAClC;AACA;AACAV,IAAAA,UAAU,CAAC;AACTe,MAAAA,SAAS,EAAElB,MADF;AAETmB,MAAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEpC;AAAT,OAAD;AAFP,KAAD,CAAV;AAIAiB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GARD,CAhC0B,CA0C1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEJ,YAAY,CAACoB,gBAAD,CAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAEL,iBAHZ;AAIE,UAAA,KAAK,EAAEZ,MAAM,CAACR,IAJhB;AAKE,UAAA,GAAG,EAAEI,QALP;AAME,UAAA,SAAS,EAAG,gBAAeE,MAAM,CAACN,IAAP,GAAc,YAAd,GAA6B,EAAG;AAN7D;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oCAAmCM,MAAM,CAACN,IAA1C,iDAAmC,aAAamB;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,QAAQ,EAAEC,iBAFZ;AAGE,UAAA,KAAK,EAAEZ,MAAM,CAACL,UAHhB;AAIE,UAAA,GAAG,EAAEC,QAJP;AAKE,UAAA,SAAS,EAAG,gBAAeE,MAAM,CAACH,UAAP,GAAoB,YAApB,GAAmC,EAAG,EALnE;AAAA,kCAOE;AAAQ,YAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAaE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,0CAAmCG,MAAM,CAACH,UAA1C,uDAAmC,mBAAmBgB;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eA4BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAtFD;;AAwFA,eAAevB,aAAf","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\nconst CreateNewRepo = () => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\"),\n  });\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const [inputs, setInputs] = React.useState({ name: \"\", visibility: \"\" });\n\n  const [createRepo, { loading, error }] = useMutation(CREATE_REPO, {\n    onCompleted: (data) => alert(\"Repo Created Successfully\", data),\n    onError: (error) => console.error(\"Error creating a post\", error),\n  });\n\n  if (loading) {\n    return \"Loading...\";\n  }\n  if (error) {\n    return `Error! ${error.message}`;\n  }\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs((inputs) => ({\n      ...inputs,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const handleCreateRepo = (event) => {\n    // console.log(typeof inputs.visibility)\n    // event.preventDefault();\n    createRepo({\n      variables: inputs,\n      refetchQueries: [{ query: GET_REPOSITORIES }],\n    });\n    setInputs(\"\");\n  };\n\n  // const handleCreateRepo = useCallback((event) => {\n  //   event.preventDefault();\n  //   createRepo({\n  //     variables: inputs,\n  //     refetchQueries: [{ query: GET_REPOSITORIES }],\n  //   });\n  // }, []);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(handleCreateRepo)}>\n        <div className=\"form-group col-6\">\n          <label>Repository name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleInputChange}\n            value={inputs.name}\n            ref={register}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\n        </div>\n        <div className=\"form-group col-6\">\n          <label>Visibility:</label>\n          <select\n            name=\"visibility\"\n            onChange={handleInputChange}\n            value={inputs.visibility}\n            ref={register}\n            className={`form-control ${errors.visibility ? \"is-invalid\" : \"\"}`}\n          >\n            <option value=\"\">Select visibility</option>\n            <option value=\"PRIVATE\">PRIVATE</option>\n            <option value=\"PUBLIC\">PUBLIC</option>\n          </select>\n          <div className=\"invalid-feedback\">{errors.visibility?.message}</div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          New Repo\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateNewRepo;"]},"metadata":{},"sourceType":"module"}