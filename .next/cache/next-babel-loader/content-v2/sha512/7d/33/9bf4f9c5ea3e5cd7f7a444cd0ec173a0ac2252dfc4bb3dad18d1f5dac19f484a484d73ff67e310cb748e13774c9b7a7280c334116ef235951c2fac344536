{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/profile.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar Profile = function Profile() {\n  var _data, _data$viewer, _data2, _data2$viewer;\n\n  // const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topnav\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, _this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", (_data = data) === null || _data === void 0 ? void 0 : (_data$viewer = _data.viewer) === null || _data$viewer === void 0 ? void 0 : _data$viewer.login, \" || Email: \", (_data2 = data) === null || _data2 === void 0 ? void 0 : (_data2$viewer = _data2.viewer) === null || _data2$viewer === void 0 ? void 0 : _data2$viewer.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Profile;\nProfile.propTypes = {\n  items: PropTypes.objectOf(PropTypes.shape({\n    login: PropTypes.string,\n    email: PropTypes.number\n  }))\n}; // import React from \"react\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n// export function Profile ({ login, email })  {\n//   const { loading, data } = useQuery(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//         <div className=\"search-container\">\n//           {loading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             <p>\n//               Username: {data} || Email: {data}\n//             </p>\n//           )}\n//           <p></p>\n//         </div>\n//       </div>\n//   );\n// }\n// Profile.propTypes = {\n//   data: {\n//     viewer: {\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     },\n//   }\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/profile.tsx"],"names":["React","PropTypes","Profile","loading","data","viewer","login","email","propTypes","items","objectOf","shape","string","number"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAEpB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACMC,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADM,gBAEN;AAAA,0CAAcC,IAAd,0DAAc,MAAMC,MAApB,iDAAc,aAAcC,KAA5B,2BAA8CF,IAA9C,4DAA8C,OAAMC,MAApD,kDAA8C,cAAcE,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,eAHP,eAKE;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAhBD;;KAAML,O;AAkBNA,OAAO,CAACM,SAAR,GAAoB;AAClBC,EAAAA,KAAK,EAAER,SAAS,CAACS,QAAV,CACLT,SAAS,CAACU,KAAV,CAAgB;AACdL,IAAAA,KAAK,EAAEL,SAAS,CAACW,MADH;AAEdL,IAAAA,KAAK,EAAEN,SAAS,CAACY;AAFH,GAAhB,CADK;AADW,CAApB,C,CASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROFILE } from \"../queries/queries\";\nimport PropTypes from \"prop-types\";\n\nconst Profile = () => {\n\n  // const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n\n  return (\n    <div className=\"topnav\">\n      <div className=\"search-container\">\n          { loading\n          ? (<p>Loading...</p>)\n          : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n          }\n        <p>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  items: PropTypes.objectOf(\n    PropTypes.shape({\n      login: PropTypes.string,\n      email: PropTypes.number,\n    })\n  ),\n};\n\n// import React from \"react\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n\n// export function Profile ({ login, email })  {\n\n//   const { loading, data } = useQuery(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//         <div className=\"search-container\">\n//           {loading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             <p>\n//               Username: {data} || Email: {data}\n//             </p>\n//           )}\n//           <p></p>\n//         </div>\n//       </div>\n//   );\n// }\n\n// Profile.propTypes = {\n//   data: {\n//     viewer: {\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     },\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}