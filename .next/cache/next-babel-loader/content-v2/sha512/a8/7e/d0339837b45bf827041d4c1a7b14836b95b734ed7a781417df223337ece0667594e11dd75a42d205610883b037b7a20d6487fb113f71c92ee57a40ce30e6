{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/repository.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\n\nconst Repository = ({}) => {\n  var _data$viewer, _data$viewer$reposito;\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_REPOSITORIES);\n  const repoList = data === null || data === void 0 ? void 0 : (_data$viewer = data.viewer) === null || _data$viewer === void 0 ? void 0 : (_data$viewer$reposito = _data$viewer.repositories) === null || _data$viewer$reposito === void 0 ? void 0 : _data$viewer$reposito.nodes;\n  const renderRepoList = React.useMemo(() => {\n    return repoList;\n  }, [repoList]);\n\n  if (loading) {\n    return \"Loading...\";\n  }\n\n  if (error) {\n    return `Error! ${error.message}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderRepoList.map((repo, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: repo.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Repository;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/repository.tsx"],"names":["React","useQuery","GET_REPOSITORIES","Repository","loading","error","data","repoList","viewer","repositories","nodes","renderRepoList","useMemo","message","map","repo","index","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAMA,MAAMC,UAA2B,GAAG,CAAC,EAAD,KAAQ;AAAA;;AAE1C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,gBAAD,CAAzC;AACA,QAAMK,QAAQ,GAAGD,IAAH,aAAGA,IAAH,uCAAGA,IAAI,CAAEE,MAAT,0EAAG,aAAcC,YAAjB,0DAAG,sBAA4BC,KAA7C;AAEA,QAAMC,cAAc,GAAGX,KAAK,CAACY,OAAN,CAAc,MAAM;AACzC,WAAOL,QAAP;AACD,GAFsB,EAEpB,CAACA,QAAD,CAFoB,CAAvB;;AAIA,MAAIH,OAAJ,EAAa;AACX,WAAO,YAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,WAAQ,UAASA,KAAK,CAACQ,OAAQ,EAA/B;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,cAAc,CAACG,GAAf,CAAmB,CAACC,IAAD,EAAoBC,KAApB,KAA8B;AAChD,4BAAO;AAAA,oBAAiBD,IAAI,CAACE;AAAtB,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzBD;;AA2BA,eAAeb,UAAf","sourcesContent":["import React from \"react\";\nimport { IRepository } from \"../types\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\n\ntype Props = {\n  repos: IRepository;\n};\n\nconst Repository: React.FC<Props> = ({}) => {\n\n  const { loading, error, data } = useQuery(GET_REPOSITORIES);\n  const repoList = data?.viewer?.repositories?.nodes;\n\n  const renderRepoList = React.useMemo(() => {\n    return repoList;\n  }, [repoList]);\n\n  if (loading) {\n    return \"Loading...\";\n  }\n  if (error) {\n    return `Error! ${error.message}`;\n  }\n  return (\n    <div className=\"footer\">\n      <h3>All Repositories</h3>\n      <ul>\n        {renderRepoList.map((repo: IRepository, index) => {\n          return <li key={index}>{repo.name}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}