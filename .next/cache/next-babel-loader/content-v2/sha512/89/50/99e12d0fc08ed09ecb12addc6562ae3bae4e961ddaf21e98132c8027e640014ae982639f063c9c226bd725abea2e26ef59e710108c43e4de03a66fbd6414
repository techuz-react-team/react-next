{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/repository.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\nexport var getStaticProps = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _context.next = 3;\n            return useQuery(GET_REPOSITORIES);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                posts: posts\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  }));\n\n  return function getStaticProps() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Repository = function Repository(_ref2) {\n  var posts = _ref2.posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repos.map(function (repo, index) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: repo.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Repository;\nexport default Repository;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repository\");","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/repository.tsx"],"names":["React","useQuery","GET_REPOSITORIES","getStaticProps","res","json","posts","props","Repository","repos","map","repo","index","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAMA,OAAO,IAAMC,cAAc;AAAA;;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBACRF,QAAQ,CAACC,gBAAD,CADA;;AAAA;AACpBE,YAAAA,GADoB;AAAA;AAAA,mBAEEA,GAAG,CAACC,IAAJ,EAFF;;AAAA;AAEpBC,YAAAA,KAFoB;AAAA,6CAInB;AACLC,cAAAA,KAAK,EAAE;AACLD,gBAAAA,KAAK,EAALA;AADK;AADF,aAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YACLL,QADK;AAAA;;AAAA,kBAAdE,cAAc;AAAA;AAAA;AAAA,GAApB;;AAWP,IAAMK,UAA2B,GAAG,SAA9BA,UAA8B,QAA+D;AAAA,MAA5DF,KAA4D,SAA5DA,KAA4D;AACjG,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBACGG,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,4BAAO;AAAA,oBAAiBD,IAAI,CAACE;AAAtB,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAXD;;KAAMJ,U;AAaN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { InferGetStaticPropsType } from 'next'\nimport { IRepository } from \"../types\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_REPOSITORIES } from \"../queries/queries\";\n\ntype Props = {\n  repos: IRepository;\n};\n\nexport const getStaticProps = async () => {\n    const res = await useQuery(GET_REPOSITORIES);\n    const posts: Post[] = await res.json()\n  \n    return {\n      props: {\n        posts,\n      },\n    }\n  }\n\nconst Repository: React.FC<Props> = ({ posts }: InferGetStaticPropsType<typeof getStaticProps>) => {\n  return (\n    <div className=\"footer\">\n      <h3>All Repositories</h3>\n      <ul>\n        {repos.map((repo, index) => {\n          return <li key={index}>{repo.name}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}