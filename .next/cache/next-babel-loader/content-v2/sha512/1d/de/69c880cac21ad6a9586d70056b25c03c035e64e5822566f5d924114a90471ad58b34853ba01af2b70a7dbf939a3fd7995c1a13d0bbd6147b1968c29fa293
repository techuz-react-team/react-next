{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useMutation } from \"@apollo/client\";\n// import { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\n// import { IcreateRepo } from \"../types\";\n// const CreateRepoForm: React.FC<any> = ({ }) => {\n//   const [name, setName] = useState(\"\");\n//   const [visibility, setVisibility] = useState(\"\");\n//   const [createRepo, { error, data }] = \n//   useMutation< { createRepo: IcreateRepo }>\n//   (CREATE_REPO, {\n//     variables: { name, visibility },\n//   });\n//   return (\n//     <div>\n//       <h3>Create Repository</h3>\n//       {error ? <p>Oh no! {error.message}</p> : null}\n//       {data && data.createRepo ? <p>Saved!</p> : null}\n//       <form onSubmit={() => name && visibility && createRepo()}>\n//         <p>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <label>Visibility</label>\n//           <select name=\"visibility\" onChange={(e) => setVisibility(e.target.value)}>\n//             <option value=\"\">Select visibility</option>\n//             <option value=\"PRIVATE\">PRIVATE</option>\n//             <option value=\"PUBLIC\">PUBLIC</option>\n//           </select>\n//         </p>\n//         <button type=\"submit\" >Create Repo</button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default CreateRepoForm;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\n// import { useMutation } from \"@apollo/client\";\n// import { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\n// import { IcreateRepo } from \"../types\";\n\n// const CreateRepoForm: React.FC<any> = ({ }) => {\n//   const [name, setName] = useState(\"\");\n//   const [visibility, setVisibility] = useState(\"\");\n\n//   const [createRepo, { error, data }] = \n//   useMutation< { createRepo: IcreateRepo }>\n//   (CREATE_REPO, {\n//     variables: { name, visibility },\n//   });\n\n//   return (\n//     <div>\n//       <h3>Create Repository</h3>\n//       {error ? <p>Oh no! {error.message}</p> : null}\n//       {data && data.createRepo ? <p>Saved!</p> : null}\n//       <form onSubmit={() => name && visibility && createRepo()}>\n//         <p>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//         </p>\n//         <p>\n//           <label>Visibility</label>\n//           <select name=\"visibility\" onChange={(e) => setVisibility(e.target.value)}>\n//             <option value=\"\">Select visibility</option>\n//             <option value=\"PRIVATE\">PRIVATE</option>\n//             <option value=\"PUBLIC\">PUBLIC</option>\n//           </select>\n//         </p>\n//         <button type=\"submit\" >Create Repo</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default CreateRepoForm;"]},"metadata":{},"sourceType":"script"}