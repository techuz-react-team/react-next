{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\";\nimport { Field, Formik } from \"formik\";\nimport React from \"react\";\nconst registerMutation = gql`\n  mutation RegisterMutation($email: String!, $password: String!) {\n    register(email: $email, password: $password)\n  }\n`;\nexport default (() => {\n  return /*#__PURE__*/_jsxDEV(Mutation, {\n    mutation: registerMutation,\n    children: register => /*#__PURE__*/_jsxDEV(Formik, {\n      validateOnBlur: false,\n      validateOnChange: false,\n      onSubmit: async (data, {\n        setErrors\n      }) => {\n        try {\n          const response = await register({\n            variables: {\n              data\n            }\n          });\n          console.log(response);\n        } catch (err) {\n          console.log(err);\n        }\n      },\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      children: ({\n        handleSubmit\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          placeholder: \"email\",\n          component: InputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          placeholder: \"password\",\n          type: \"password\",\n          component: InputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n}); // const CreateRepo: React.FC<any> = ({}) => { \n//   return(\n//     <div> create repo</div>\n//   )\n// }\n// export default CreateRepo;\n// import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default CreateRepo;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["Field","Formik","React","registerMutation","gql","register","data","setErrors","response","variables","console","log","err","email","password","handleSubmit","InputField"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,QAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,MAAMC,gBAAgB,GAAGC,GAAI;AAC7B;AACA;AACA;AACA,CAJA;AAMA,gBAAe,MAAM;AACnB,sBACI,QAAC,QAAD;AACE,IAAA,QAAQ,EAAED,gBADZ;AAAA,cAGGE,QAAQ,iBACP,QAAC,MAAD;AACE,MAAA,cAAc,EAAE,KADlB;AAEE,MAAA,gBAAgB,EAAE,KAFpB;AAGE,MAAA,QAAQ,EAAE,OAAOC,IAAP,EAAa;AAAEC,QAAAA;AAAF,OAAb,KAA+B;AACvC,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAAC;AAC9BI,YAAAA,SAAS,EAAE;AACTH,cAAAA;AADS;AADmB,WAAD,CAA/B;AAKAI,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,SAPD,CAOE,OAAOI,GAAP,EAAY;AACZF,UAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,OAdH;AAeE,MAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE,EADM;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OAfjB;AAAA,gBAoBG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC;AAAM,QAAA,QAAQ,EAAEA,YAAhB;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,SAAS,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,SAAS,EAAEA;AAJb;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CD,CA9CD,E,CAgDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { Field, Formik } from \"formik\";\nimport React from \"react\";\n\nimport { RegisterMutationVariables, RegisterMutation } from \"../../schemaTypes\";\n\nconst registerMutation = gql`\n  mutation RegisterMutation($email: String!, $password: String!) {\n    register(email: $email, password: $password)\n  }\n`;\n\nexport default () => {\n  return (\n      <Mutation<RegisterMutation, RegisterMutationVariables>\n        mutation={registerMutation}\n      >\n        {register => (\n          <Formik\n            validateOnBlur={false}\n            validateOnChange={false}\n            onSubmit={async (data, { setErrors }) => {\n              try {\n                const response = await register({\n                  variables: {\n                    data\n                  }\n                });\n                console.log(response);\n              } catch (err) {\n                console.log(err)\n              }\n            }}\n            initialValues={{\n              email: \"\",\n              password: \"\"\n            }}\n          >\n            {({ handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                <Field\n                  name=\"email\"\n                  placeholder=\"email\"\n                  component={InputField}\n                />\n                <Field\n                  name=\"password\"\n                  placeholder=\"password\"\n                  type=\"password\"\n                  component={InputField}\n                />\n                <button type=\"submit\">submit</button>\n              </form>\n            )}\n          </Formik>\n        )}\n      </Mutation>\n  );\n};\n\n// const CreateRepo: React.FC<any> = ({}) => { \n//   return(\n//     <div> create repo</div>\n//   )\n// }\n// export default CreateRepo;\n\n// import React from \"react\";\n// import { Formik, ErrorMessage } from \"formik\";\n// import { Input, Button, Form } from \"antd\";\n// import * as Yup from \"yup\";\n\n// const CreateRepo: React.FC<any> = ({}) => {\n//   const createRepo = Yup.object().shape({\n//     name: Yup.string().required(\"Repository name is required\"),\n//     visibility: Yup.string().required(\"Visibility is required\"),\n//   });\n\n// \tconst handleSubmit = (data: any) => {\n// \t\t// this.props.login(data);\n//   };\n  \n//   return (\n//     <div className=\"container-body\">\n//       <Formik\n//         initialValues={{\n//           name: \"\",\n//           visibility: \"\",\n//         }}\n//         validationSchema={createRepo}\n//         onSubmit={handleSubmit}\n//         render={({ handleSubmit, handleChange, values }) => (\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Item>\n//               <Input\n//                 type=\"text\"\n//                 onChange={handleChange}\n//                 value={values.name}\n//                 name=\"name\"\n//                 placeholder=\"Enter Repo Name\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"email\" />\n//             </Form.Item>\n//             <Form.Item>\n//               <Input\n//                 type=\"password\"\n//                 onChange={handleChange}\n//                 value={values.password}\n//                 name=\"password\"\n//                 placeholder=\"Password\"\n//               />\n//               <ErrorMessage bottom component={ErrorBlock} name=\"password\" />\n//             </Form.Item>\n//             <Button htmlType=\"submit\" className=\"btn\" type=\"primary\">\n//               Signin\n//             </Button>\n//           </Form>\n//         )}\n//       />\n//       <hr className=\"divider\" />\n//       <div className=\"form-group\">\n//         <div className=\"forgot-part text-right\">\n//           <span className=\"forgot\" onClick={onRegister}>\n//             Register your account?\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CreateRepo;\n"]},"metadata":{},"sourceType":"module"}