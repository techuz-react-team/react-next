{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\";\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nconst CreateRepoForm = ({}) => {\n  var _errors$name, _errors$name2;\n\n  // const validationSchema = Yup.object().shape({\n  //   name: Yup.string().required(\"Repository name is required1\"),\n  //   visibility: Yup.string().required(\"Visibility is required,,\"),\n  // });\n  const validationSchema = useMemo(() => yup.object().shape({\n    name: yup.string().required(\"Repository name is required...\"),\n    visibility: yup.string().required(\"Visibility is required11\")\n  }), []);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const handleCreateRepo = useCallback(formValues => {\n    console.log(formValues);\n    alert(JSON.stringify(formValues));\n    createRepo({\n      variables: formValues,\n      refetchQueries: [{\n        query: GET_REPOSITORIES\n      }]\n    });\n  }, [formValues]);\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: visibility,\n    1: setVisibility\n  } = useState(\"\");\n  const [createRepo, {\n    error,\n    data\n  }] = useMutation(CREATE_REPO, {\n    variables: {\n      name,\n      visibility\n    }\n  }); // const handleCreateRepo = (formData: any) => {\n  //   alert(JSON.stringify(formData));\n  //   createRepo({\n  //     variables: { name, visibility },\n  //     refetchQueries: [{ query: GET_REPOSITORIES }],\n  //   });\n  //   setName('');\n  //   setVisibility('')\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Repository\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Oh no! \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this) : null, data && data.createRepo ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Saved!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleCreateRepo),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: register({\n            required: true\n          }),\n          type: \"text\",\n          name: \"name\",\n          onChange: e => setName(e.target.value),\n          className: `form-control ${errors.name ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Visibility\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: register({\n            required: true\n          }),\n          name: \"visibility\",\n          onChange: e => setVisibility(e.target.value),\n          className: `form-control ${errors.name ? \"is-invalid\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PRIVATE\",\n            children: \"PRIVATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PUBLIC\",\n            children: \"PUBLIC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Repo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateRepoForm;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["React","useState","useCallback","useMemo","useMutation","useForm","CREATE_REPO","GET_REPOSITORIES","yupResolver","yup","CreateRepoForm","validationSchema","object","shape","name","string","required","visibility","register","handleSubmit","errors","resolver","handleCreateRepo","formValues","console","log","alert","JSON","stringify","createRepo","variables","refetchQueries","query","setName","setVisibility","error","data","message","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { RepoFormData } from \"../types\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n \nconst CreateRepoForm: React.FC<any> = ({}) => {\n\n  // const validationSchema = Yup.object().shape({\n  //   name: Yup.string().required(\"Repository name is required1\"),\n  //   visibility: Yup.string().required(\"Visibility is required,,\"),\n  // });\n  const validationSchema = useMemo(() => (\n    yup.object().shape({\n      name: yup.string().required(\"Repository name is required...\"),\n      visibility: yup.string().required(\"Visibility is required11\"),\n    })\n  ), [])\n\n  const { register, handleSubmit, errors } = useForm<RepoFormData>({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const handleCreateRepo = useCallback((formValues: RepoFormData) => {\n    console.log(formValues);\n    alert(JSON.stringify(formValues));\n    createRepo({\n      variables: formValues,\n      refetchQueries: [{ query: GET_REPOSITORIES }],\n    });\n  }, [formValues]);\n\n\n  const [name, setName] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"\");\n\n\n  const [createRepo, { error, data }] = useMutation<{\n    createRepo: RepoFormData;\n  }>(CREATE_REPO, {\n    variables: { name, visibility },\n  });\n\n  // const handleCreateRepo = (formData: any) => {\n  //   alert(JSON.stringify(formData));\n  //   createRepo({\n  //     variables: { name, visibility },\n  //     refetchQueries: [{ query: GET_REPOSITORIES }],\n  //   });\n  //   setName('');\n  //   setVisibility('')\n  // };\n\n  return (\n    <div>\n      <h3>Create Repository</h3>\n      {error ? <p>Oh no! {error.message}</p> : null}\n      {data && data.createRepo ? <p>Saved!</p> : null}\n      <form onSubmit={handleSubmit(handleCreateRepo)}>\n      <div className=\"form-group col-6\">\n          <label>Name</label>\n          <input\n            ref={register({required: true })}\n            type=\"text\"\n            name=\"name\"\n            onChange={(e) => setName(e.target.value)}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\n        </div>\n        <div className=\"form-group col-6\">\n          <label>Visibility</label>\n          <select\n            ref={register({required: true })}\n            name=\"visibility\"\n            onChange={(e) => setVisibility(e.target.value)}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          >\n            <option value=\"\">Select visibility</option>\n            <option value=\"PRIVATE\">PRIVATE</option>\n            <option value=\"PUBLIC\">PUBLIC</option>\n          </select>\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\n        </div>\n        <button type=\"submit\">Create Repo</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateRepoForm;\n"]},"metadata":{},"sourceType":"module"}