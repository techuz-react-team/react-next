{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_REPO } from \"../queries/queries\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\nconst CreateRepoForm = ({}) => {\n  var _errors$name, _errors$visibility;\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\")\n  });\n  const {\n    register,\n    errors\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: visibility,\n    1: setVisibility\n  } = useState(\"\");\n  const [createRepo, {\n    error,\n    data\n  }] = useMutation(CREATE_REPO, {\n    variables: {\n      name,\n      visibility\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleCreateRepo),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Repository name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleInputChange,\n          value: inputs.name,\n          ref: register,\n          className: `form-control ${errors.name ? \"is-invalid\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Visibility:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"visibility\",\n          onChange: handleInputChange,\n          value: inputs.visibility,\n          ref: register,\n          className: `form-control ${errors.visibility ? \"is-invalid\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PRIVATE\",\n            children: \"PRIVATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PUBLIC\",\n            children: \"PUBLIC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$visibility = errors.visibility) === null || _errors$visibility === void 0 ? void 0 : _errors$visibility.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"New Repo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this) // <div>\n  //   <h3>Create Repository</h3>\n  //   {error ? <p>Oh no! {error.message}</p> : null}\n  //   {data && data.createRepo ? <p>Saved!</p> : null}\n  //   <form onClick={() => name && visibility && createRepo()}>\n  //     <p>\n  //       <label>Name</label>\n  //       <input\n  //         type=\"text\"\n  //         name=\"name\"\n  //         onChange={(e) => setName(e.target.value)}\n  //         ref={register}\n  //         className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n  //       />\n  //       <div className=\"invalid-feedback\">{errors.name?.message}</div>\n  //     </p>\n  //     <p>\n  //       <label>Visibility</label>\n  //       <select\n  //         name=\"visibility\"\n  //         onChange={(e) => setVisibility(e.target.value)}\n  //         ref={register}\n  //         className={`form-control ${errors.visibility ? \"is-invalid\" : \"\"}`}\n  //       >\n  //         <option value=\"\">Select visibility</option>\n  //         <option value=\"PRIVATE\">PRIVATE</option>\n  //         <option value=\"PUBLIC\">PUBLIC</option>\n  //       </select>\n  //       <div className=\"invalid-feedback\">{errors.visibility?.message}</div>\n  //     </p>\n  //     <button type=\"submit\">Create Repo</button>\n  //   </form>\n  // </div>\n  ;\n};\n\nexport default CreateRepoForm;","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["React","useState","useMutation","CREATE_REPO","useForm","yupResolver","Yup","CreateRepoForm","validationSchema","object","shape","name","string","required","visibility","register","errors","resolver","setName","setVisibility","createRepo","error","data","variables","handleSubmit","handleCreateRepo","handleInputChange","inputs","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { IcreateRepo } from \"../types\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\nconst CreateRepoForm: React.FC<any> = ({}) => {\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\"),\n  });\n\n  const { register, errors } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const [name, setName] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"\");\n\n  const [createRepo, { error, data }] = useMutation<{\n    createRepo: IcreateRepo;\n  }>(CREATE_REPO, {\n    variables: { name, visibility },\n  });\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(handleCreateRepo)}>\n        <div className=\"form-group col-6\">\n          <label>Repository name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleInputChange}\n            value={inputs.name}\n            ref={register}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\n        </div>\n        <div className=\"form-group col-6\">\n          <label>Visibility:</label>\n          <select\n            name=\"visibility\"\n            onChange={handleInputChange}\n            value={inputs.visibility}\n            ref={register}\n            className={`form-control ${errors.visibility ? \"is-invalid\" : \"\"}`}\n          >\n            <option value=\"\">Select visibility</option>\n            <option value=\"PRIVATE\">PRIVATE</option>\n            <option value=\"PUBLIC\">PUBLIC</option>\n          </select>\n          <div className=\"invalid-feedback\">{errors.visibility?.message}</div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          New Repo\n        </button>\n      </form>\n    </div>\n    // <div>\n    //   <h3>Create Repository</h3>\n    //   {error ? <p>Oh no! {error.message}</p> : null}\n    //   {data && data.createRepo ? <p>Saved!</p> : null}\n    //   <form onClick={() => name && visibility && createRepo()}>\n    //     <p>\n    //       <label>Name</label>\n    //       <input\n    //         type=\"text\"\n    //         name=\"name\"\n    //         onChange={(e) => setName(e.target.value)}\n    //         ref={register}\n    //         className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n    //       />\n    //       <div className=\"invalid-feedback\">{errors.name?.message}</div>\n    //     </p>\n    //     <p>\n    //       <label>Visibility</label>\n    //       <select\n    //         name=\"visibility\"\n    //         onChange={(e) => setVisibility(e.target.value)}\n    //         ref={register}\n    //         className={`form-control ${errors.visibility ? \"is-invalid\" : \"\"}`}\n    //       >\n    //         <option value=\"\">Select visibility</option>\n    //         <option value=\"PRIVATE\">PRIVATE</option>\n    //         <option value=\"PUBLIC\">PUBLIC</option>\n    //       </select>\n    //       <div className=\"invalid-feedback\">{errors.visibility?.message}</div>\n    //     </p>\n    //     <button type=\"submit\">Create Repo</button>\n    //   </form>\n    // </div>\n  );\n};\n\nexport default CreateRepoForm;\n"]},"metadata":{},"sourceType":"module"}