{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/profile.tsx\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROFILE } from \"../queries/queries\";\nimport PropTypes from \"prop-types\";\n\nconst Profile = () => {\n  var _data$viewer, _data$viewer2;\n\n  const {\n    loading,\n    data\n  } = useQuery(GET_PROFILE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topnav\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", data === null || data === void 0 ? void 0 : (_data$viewer = data.viewer) === null || _data$viewer === void 0 ? void 0 : _data$viewer.login, \" || Email: \", data === null || data === void 0 ? void 0 : (_data$viewer2 = data.viewer) === null || _data$viewer2 === void 0 ? void 0 : _data$viewer2.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nProfile.propTypes = {\n  data: {\n    viewer: {\n      login: PropTypes.string,\n      email: PropTypes.string\n    }\n  }\n};\nexport default Profile; // import React from \"react\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n// export function Profile ({ login, email })  {\n//   const { loading, data } = useQuery(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//         <div className=\"search-container\">\n//           {loading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             <p>\n//               Username: {data} || Email: {data}\n//             </p>\n//           )}\n//           <p></p>\n//         </div>\n//       </div>\n//   );\n// }\n// Profile.propTypes = {\n//   data: {\n//     viewer: {\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     },\n//   }\n// };","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/profile.tsx"],"names":["React","useQuery","GET_PROFILE","PropTypes","Profile","loading","data","viewer","login","email","propTypes","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBL,QAAQ,CAAWC,WAAX,CAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACMG,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBAEN;AAAA,iCAAcC,IAAd,aAAcA,IAAd,uCAAcA,IAAI,CAAEC,MAApB,iDAAc,aAAcC,KAA5B,iBAA8CF,IAA9C,aAA8CA,IAA9C,wCAA8CA,IAAI,CAAEC,MAApD,kDAA8C,cAAcE,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,cAHP,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhBD;;AAkBAL,OAAO,CAACM,SAAR,GAAoB;AAClBJ,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEL,SAAS,CAACQ,MADX;AAENF,MAAAA,KAAK,EAAEN,SAAS,CAACQ;AAFX;AADJ;AADY,CAApB;AASA,eAAeP,OAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROFILE } from \"../queries/queries\";\nimport PropTypes from \"prop-types\";\n\nconst Profile = () => {\n\n  const { loading, data } = useQuery<IProfile>(GET_PROFILE);\n\n  return (\n    <div className=\"topnav\">\n      <div className=\"search-container\">\n          { loading\n          ? (<p>Loading...</p>)\n          : (<p>Username: {data?.viewer?.login} || Email: {data?.viewer?.email}</p>)\n          }\n        <p>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  data: {\n    viewer: {\n      login: PropTypes.string,\n      email: PropTypes.string,\n    },\n  }\n};\n\nexport default Profile;\n\n// import React from \"react\";\n// import { useQuery } from \"@apollo/client\";\n// import { GET_PROFILE } from \"../queries/queries\";\n\n// export function Profile ({ login, email })  {\n\n//   const { loading, data } = useQuery(GET_PROFILE);\n//   return (\n//     <div className=\"topnav\">\n//         <div className=\"search-container\">\n//           {loading ? (\n//             <p>Loading...</p>\n//           ) : (\n//             <p>\n//               Username: {data} || Email: {data}\n//             </p>\n//           )}\n//           <p></p>\n//         </div>\n//       </div>\n//   );\n// }\n\n// Profile.propTypes = {\n//   data: {\n//     viewer: {\n//       login: PropTypes.string,\n//       email: PropTypes.string,\n//     },\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}