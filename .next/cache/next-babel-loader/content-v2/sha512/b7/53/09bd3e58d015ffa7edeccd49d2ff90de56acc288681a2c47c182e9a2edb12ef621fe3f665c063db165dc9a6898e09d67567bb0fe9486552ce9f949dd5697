{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/var/www/html/react-test-ashish/react-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\n\nvar CreateNewRepo = function CreateNewRepo() {\n  _s();\n\n  var _errors$name, _errors$visibility;\n\n  var validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\")\n  });\n\n  var _useForm = useForm({\n    resolver: yupResolver(validationSchema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _React$useState = React.useState({\n    name: \"\",\n    visibility: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputs = _React$useState2[0],\n      setInputs = _React$useState2[1];\n\n  var _useMutation = useMutation(CREATE_REPO, {\n    onCompleted: function onCompleted(data) {\n      return alert(\"Repo Created Successfully\", data);\n    },\n    onError: function onError(error) {\n      return console.error(\"Error creating a post\", error);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createRepo = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  if (loading) {\n    return \"Loading...\";\n  }\n\n  if (error) {\n    return \"Error! \".concat(error.message);\n  }\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n    setInputs(function (inputs) {\n      return _objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n\n  var handleCreateRepo = function handleCreateRepo(event) {\n    // console.log(typeof inputs.visibility)\n    // event.preventDefault();\n    createRepo({\n      variables: inputs,\n      refetchQueries: [{\n        query: GET_REPOSITORIES\n      }]\n    });\n    setInputs(\"\");\n  }; // const handleCreateRepo = useCallback((event) => {\n  //   event.preventDefault();\n  //   createRepo({\n  //     variables: inputs,\n  //     refetchQueries: [{ query: GET_REPOSITORIES }],\n  //   });\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleCreateRepo),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Repository name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleInputChange,\n          value: inputs.name,\n          ref: register,\n          className: \"form-control \".concat(errors.name ? \"is-invalid\" : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Visibility:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"visibility\",\n          onChange: handleInputChange,\n          value: inputs.visibility,\n          ref: register,\n          className: \"form-control \".concat(errors.visibility ? \"is-invalid\" : \"\"),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PRIVATE\",\n            children: \"PRIVATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PUBLIC\",\n            children: \"PUBLIC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$visibility = errors.visibility) === null || _errors$visibility === void 0 ? void 0 : _errors$visibility.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"New Repo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateNewRepo, \"OmEcfk3T4VNeAfh/Qn39s+ElJVI=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = CreateNewRepo;\nexport default CreateNewRepo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewRepo\");","map":{"version":3,"sources":["/var/www/html/react-test-ashish/react-next/components/createNewRepo.tsx"],"names":["useMutation","React","CREATE_REPO","GET_REPOSITORIES","useForm","Yup","CreateNewRepo","validationSchema","object","shape","name","string","required","visibility","resolver","yupResolver","register","handleSubmit","errors","useState","inputs","setInputs","onCompleted","data","alert","onError","error","console","createRepo","loading","message","handleInputChange","event","persist","target","value","handleCreateRepo","variables","refetchQueries","query"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { CREATE_REPO, GET_REPOSITORIES } from \"../queries/queries\";\nimport { useForm } from \"react-hook-form\";\nimport * as Yup from \"yup\";\n\nconst CreateNewRepo = () => {\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Repository name is required\"),\n    visibility: Yup.string().required(\"Visibility is required\"),\n  });\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const [inputs, setInputs] = React.useState({ name: \"\", visibility: \"\" });\n\n  const [createRepo, { loading, error }] = useMutation(CREATE_REPO, {\n    onCompleted: (data) => alert(\"Repo Created Successfully\", data),\n    onError: (error) => console.error(\"Error creating a post\", error),\n  });\n\n  if (loading) {\n    return \"Loading...\";\n  }\n  if (error) {\n    return `Error! ${error.message}`;\n  }\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs((inputs) => ({\n      ...inputs,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const handleCreateRepo = (event) => {\n    // console.log(typeof inputs.visibility)\n    // event.preventDefault();\n    createRepo({\n      variables: inputs,\n      refetchQueries: [{ query: GET_REPOSITORIES }],\n    });\n    setInputs(\"\");\n  };\n\n  // const handleCreateRepo = useCallback((event) => {\n  //   event.preventDefault();\n  //   createRepo({\n  //     variables: inputs,\n  //     refetchQueries: [{ query: GET_REPOSITORIES }],\n  //   });\n  // }, []);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(handleCreateRepo)}>\n        <div className=\"form-group col-6\">\n          <label>Repository name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleInputChange}\n            value={inputs.name}\n            ref={register}\n            className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\n          />\n          <div className=\"invalid-feedback\">{errors.name?.message}</div>\n        </div>\n        <div className=\"form-group col-6\">\n          <label>Visibility:</label>\n          <select\n            name=\"visibility\"\n            onChange={handleInputChange}\n            value={inputs.visibility}\n            ref={register}\n            className={`form-control ${errors.visibility ? \"is-invalid\" : \"\"}`}\n          >\n            <option value=\"\">Select visibility</option>\n            <option value=\"PRIVATE\">PRIVATE</option>\n            <option value=\"PUBLIC\">PUBLIC</option>\n          </select>\n          <div className=\"invalid-feedback\">{errors.visibility?.message}</div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          New Repo\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateNewRepo;"]},"metadata":{},"sourceType":"module"}